% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runifGpu.R
\name{runifGpu}
\alias{runifGpu}
\title{runifGpu}
\usage{
runifGpu(
  n,
  streams,
  Nglobal,
  type = getOption("type", default = c("float", "double")[1 +
    gpuR::gpuInfo()$double_support]),
  verbose = getOption("verbose", default = FALSE)
)
}
\arguments{
\item{n}{a number or numeric vector specifying the size of output vector or matrix}

\item{streams}{a vclMatrix of streams.}

\item{Nglobal}{a (non-empty) integer vector specifying size of work items for use}

\item{type}{a character string specifying "double" or "float" of random numbers, default depends on GPU capabilities}

\item{verbose}{a logical value, if TRUE, print extra information. Default is set to FALSE.}
}
\value{
a vclVector or vclMatrix of uniform random numbers
}
\description{
Generate uniform random numbers parallely on a GPU
}
\examples{
 
library('clrng')
setContext(grep("gpu", listContexts()$device_type)[1])
streams <- createStreamsGpu(8)
as.vector(runifGpu(5, streams, Nglobal=c(4,2)))

#Change global options
as.matrix(runifGpu(c(2,2), streams, Nglobal=c(2,4)))
}
